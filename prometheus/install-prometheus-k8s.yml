---
- name: Deploy Prometheus Stack on Kubernetes
  hosts: localhost
  become: yes
  tasks:
    - name: Create directories
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      with_items:
        - /opt/prometheus/k8s/prometheus
        - /opt/prometheus/k8s/alertmanager
        - /opt/prometheus/k8s/grafana

    - name: Create namespace
      k8s:
        name: monitoring
        api_version: v1
        kind: Namespace
        state: present

    - name: Create prometheus config
      copy:
        dest: /opt/prometheus/k8s/prometheus/prometheus.yml
        content: |
          global:
            scrape_interval: 15s
            evaluation_interval: 15s

          alerting:
            alertmanagers:
            - static_configs:
              - targets:
                - alertmanager.monitoring.svc:9093

          rule_files:
            - /etc/prometheus/rules/*.yml

          scrape_configs:
            - job_name: 'prometheus'
              static_configs:
              - targets: ['localhost:9090']

            - job_name: 'kubernetes-nodes'
              kubernetes_sd_configs:
              - role: node
              relabel_configs:
              - source_labels: [__address__]
                regex: '(.*):10250'
                replacement: '${1}:9100'
                target_label: __address__
                action: replace

    - name: Create alertmanager config
      copy:
        dest: /opt/prometheus/k8s/alertmanager/alertmanager.yml
        content: |
          global:
            resolve_timeout: 5m

          route:
            group_by: ['alertname']
            group_wait: 10s
            group_interval: 10s
            repeat_interval: 1h
            receiver: 'web.hook'
          receivers:
          - name: 'web.hook'
            webhook_configs:
            - url: 'http://127.0.0.1:5001/'

    - name: Create ConfigMaps
      k8s:
        state: present
        definition:
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: prometheus-config
            namespace: monitoring
          data:
            prometheus.yml: |
              {{ lookup('file', '/opt/prometheus/k8s/prometheus/prometheus.yml') }}
          ---
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: alertmanager-config
            namespace: monitoring
          data:
            alertmanager.yml: |
              {{ lookup('file', '/opt/prometheus/k8s/alertmanager/alertmanager.yml') }}

    - name: Create Prometheus deployment
      k8s:
        state: present
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: prometheus
            namespace: monitoring
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: prometheus
            template:
              metadata:
                labels:
                  app: prometheus
              spec:
                containers:
                - name: prometheus
                  image: prom/prometheus:v2.45.0
                  ports:
                  - containerPort: 9090
                  volumeMounts:
                  - name: prometheus-config
                    mountPath: /etc/prometheus/
                  - name: prometheus-storage
                    mountPath: /prometheus/
                volumes:
                - name: prometheus-config
                  configMap:
                    name: prometheus-config
                - name: prometheus-storage
                  emptyDir: {}

    - name: Create Alertmanager deployment
      k8s:
        state: present
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: alertmanager
            namespace: monitoring
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: alertmanager
            template:
              metadata:
                labels:
                  app: alertmanager
              spec:
                containers:
                - name: alertmanager
                  image: prom/alertmanager:v0.26.0
                  ports:
                  - containerPort: 9093
                  volumeMounts:
                  - name: alertmanager-config
                    mountPath: /etc/alertmanager/
                volumes:
                - name: alertmanager-config
                  configMap:
                    name: alertmanager-config

    - name: Create Grafana deployment
      k8s:
        state: present
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: grafana
            namespace: monitoring
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: grafana
            template:
              metadata:
                labels:
                  app: grafana
              spec:
                containers:
                - name: grafana
                  image: grafana/grafana:10.2.0
                  ports:
                  - containerPort: 3000
                  env:
                  - name: GF_SECURITY_ADMIN_PASSWORD
                    value: "admin123"
                  volumeMounts:
                  - name: grafana-storage
                    mountPath: /var/lib/grafana
                volumes:
                - name: grafana-storage
                  emptyDir: {}

    - name: Create Services
      k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: prometheus
            namespace: monitoring
          spec:
            type: NodePort
            ports:
            - port: 9090
              targetPort: 9090
              nodePort: 30090
            selector:
              app: prometheus
          ---
          apiVersion: v1
          kind: Service
          metadata:
            name: alertmanager
            namespace: monitoring
          spec:
            type: NodePort
            ports:
            - port: 9093
              targetPort: 9093
              nodePort: 30093
            selector:
              app: alertmanager
          ---
          apiVersion: v1
          kind: Service
          metadata:
            name: grafana
            namespace: monitoring
          spec:
            type: NodePort
            ports:
            - port: 3000
              targetPort: 3000
              nodePort: 30300
            selector:
              app: grafana

    - name: Wait for deployments
      k8s_info:
        kind: Deployment
        name: "{{ item }}"
        namespace: monitoring
        wait: yes
        wait_timeout: 300
      with_items:
        - prometheus
        - alertmanager
        - grafana

    - name: Get pod status
      k8s_info:
        kind: Pod
        namespace: monitoring
        label_selectors:
          - app in (prometheus,alertmanager,grafana)
      register: pod_status

    - name: Show pod status
      debug:
        var: pod_status.resources

    - name: Show connection info
      debug:
        msg:
          - "Prometheus Stack is running (Kubernetes)"
          - "Prometheus UI: http://YOUR_SERVER_IP:30090"
          - "AlertManager UI: http://YOUR_SERVER_IP:30093"
          - "Grafana UI: http://YOUR_SERVER_IP:30300"
          - "Grafana credentials:"
          - "  Username: admin"
          - "  Password: admin123" 