---
- name: Install Prometheus Stack (AMD64)
  hosts: localhost
  gather_facts: no

  pre_tasks:
    - name: Check current user
      raw: whoami
      register: current_user
      changed_when: false

    - name: Check if running as root
      set_fact:
        is_root: "{{ current_user.stdout == 'root' }}"

    - name: Check if sudo is available
      raw: command -v sudo
      register: sudo_check
      changed_when: false

    - name: Set become method
      set_fact:
        can_sudo: "{{ sudo_check.rc == 0 }}"

    - name: Install sudo on Debian/Ubuntu systems
      raw: apt-get update && apt-get install -y sudo
      when: not can_sudo and not is_root
      become: yes
      become_method: ansible.builtin.sudo
      failed_when: false

    - name: Install sudo on RedHat/CentOS systems
      raw: yum install -y sudo
      when: not can_sudo and not is_root
      become: yes
      become_method: ansible.builtin.sudo
      failed_when: false

    - name: Verify privileges
      raw: if command -v sudo >/dev/null 2>&1; then sudo -n true 2>/dev/null; else id -u; fi
      register: priv_check
      changed_when: false

    - name: Gather facts
      setup:
      when: priv_check.rc == 0
      become: "{{ not is_root }}"
      become_method: "{{ can_sudo | ternary('ansible.builtin.sudo', 'ansible.builtin.su') }}"

  tasks:
    - name: Set become method for all tasks
      set_fact:
        ansible_become: "{{ not is_root }}"
        ansible_become_method: "{{ can_sudo | ternary('ansible.builtin.sudo', 'ansible.builtin.su') }}"

    # 创建必要的目录
    - name: Create Prometheus directories
      file:
        path: "{{ item }}"
        state: directory
        mode: "0755"
      with_items:
        - /etc/prometheus
        - /etc/alertmanager
        - /etc/grafana
        - /var/lib/prometheus
        - /var/lib/grafana
        - /var/log/prometheus
        - /var/log/alertmanager
        - /var/log/grafana

    # 安装 Prometheus 和相关组件
    - name: Install Prometheus components (Debian/Ubuntu)
      apt:
        name:
          - prometheus
          - prometheus-alertmanager
          - grafana
        state: present
        update_cache: yes
      when: ansible_os_family == "Debian"
      become: "{{ not is_root }}"
      become_method: "{{ can_sudo | ternary('ansible.builtin.sudo', 'ansible.builtin.su') }}"

    - name: Install Prometheus components (RedHat/CentOS)
      yum:
        name:
          - prometheus
          - prometheus-alertmanager
          - grafana
        state: present
      when: ansible_os_family == "RedHat"
      become: "{{ not is_root }}"
      become_method: "{{ can_sudo | ternary('ansible.builtin.sudo', 'ansible.builtin.su') }}"

    # 配置 Prometheus
    - name: Create Prometheus configuration
      copy:
        dest: /etc/prometheus/prometheus.yml
        content: |
          global:
            scrape_interval: 15s
            evaluation_interval: 15s

          alerting:
            alertmanagers:
              - static_configs:
                  - targets:
                      - localhost:9093

          rule_files:
            - /etc/prometheus/rules/*.yml

          scrape_configs:
            - job_name: prometheus
              static_configs:
                - targets:
                    - localhost:9090
            - job_name: node
              static_configs:
                - targets:
                    - localhost:9100
        mode: "0644"
      become: "{{ not is_root }}"
      become_method: "{{ can_sudo | ternary('ansible.builtin.sudo', 'ansible.builtin.su') }}"

    # 配置 AlertManager
    - name: Create AlertManager configuration
      copy:
        dest: /etc/alertmanager/alertmanager.yml
        content: |
          global:
            resolve_timeout: 5m

          route:
            group_by: ['alertname']
            group_wait: 10s
            group_interval: 10s
            repeat_interval: 1h
            receiver: 'web.hook'

          receivers:
            - name: 'web.hook'
              webhook_configs:
                - url: 'http://127.0.0.1:5001/'
        mode: "0644"
      become: "{{ not is_root }}"
      become_method: "{{ can_sudo | ternary('ansible.builtin.sudo', 'ansible.builtin.su') }}"

    # 配置 Grafana
    - name: Create Grafana configuration
      copy:
        dest: /etc/grafana/grafana.ini
        content: |
          [server]
          http_port = 3000

          [security]
          admin_user = admin
          admin_password = admin

          [auth.anonymous]
          enabled = false
        mode: "0644"
      become: "{{ not is_root }}"
      become_method: "{{ can_sudo | ternary('ansible.builtin.sudo', 'ansible.builtin.su') }}"

    # 启动服务
    - name: Start Prometheus services
      systemd:
        name: "{{ item }}"
        state: started
        enabled: yes
      with_items:
        - prometheus
        - prometheus-alertmanager
        - grafana-server
      become: "{{ not is_root }}"
      become_method: "{{ can_sudo | ternary('ansible.builtin.sudo', 'ansible.builtin.su') }}"

    - name: Debug message
      debug:
        msg: "Prometheus Stack has been installed and configured successfully."
