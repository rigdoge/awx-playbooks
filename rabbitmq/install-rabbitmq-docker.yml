---
- name: Deploy RabbitMQ Container with Docker
  hosts: localhost
  become: yes
  tasks:
    - name: Install Docker dependencies
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present
        update_cache: yes
      when: ansible_os_family == "Debian"

    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      when: ansible_os_family == "Debian"

    - name: Add Docker repository
      apt_repository:
        repo: >-
          deb [arch={{ ansible_architecture }}] https://download.docker.com/linux/ubuntu
          {{ ansible_distribution_release }} stable
        state: present
      when: ansible_os_family == "Debian"

    - name: Install Docker
      apt:
        name: docker-ce
        state: present
        update_cache: yes
      when: ansible_os_family == "Debian"

    - name: Create RabbitMQ directories
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      with_items:
        - /opt/rabbitmq/data
        - /opt/rabbitmq/config

    - name: Create RabbitMQ config
      template:
        src: templates/rabbitmq.conf.j2
        dest: /opt/rabbitmq/config/rabbitmq.conf
        mode: '0644'

    - name: Pull RabbitMQ image
      docker_image:
        name: rabbitmq:3.13.7-management
        source: pull

    - name: Start RabbitMQ container
      docker_container:
        name: rabbitmq
        image: rabbitmq:3.13.7-management
        state: started
        restart_policy: always
        ports:
          - "5672:5672"
          - "15672:15672"
        env:
          RABBITMQ_DEFAULT_USER: "admin"
          RABBITMQ_DEFAULT_PASS: "admin123"
        volumes:
          - /opt/rabbitmq/data:/var/lib/rabbitmq
          - /opt/rabbitmq/config/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro

    - name: Wait for RabbitMQ to be ready
      uri:
        url: http://localhost:15672
        status_code: 200
      register: result
      until: result.status == 200
      retries: 30
      delay: 10
      failed_when: false

    - name: Create virtual host
      command: >
        docker exec rabbitmq
        rabbitmqctl add_vhost /development
      failed_when: false

    - name: Create development user
      command: >
        docker exec rabbitmq
        rabbitmqctl add_user dev dev123
      failed_when: false

    - name: Set permissions for development user
      command: >
        docker exec rabbitmq
        rabbitmqctl set_permissions -p /development dev ".*" ".*" ".*"
      failed_when: false

    - name: Enable management plugin for dev user
      command: >
        docker exec rabbitmq
        rabbitmqctl set_user_tags dev management
      failed_when: false

    - name: Get cluster status
      command: >
        docker exec rabbitmq
        rabbitmqctl cluster_status
      register: cluster_status

    - name: Show cluster status
      debug:
        var: cluster_status.stdout_lines

    - name: Show RabbitMQ connection info
      debug:
        msg:
          - "RabbitMQ is running (Docker)"
          - "Management UI: http://YOUR_SERVER_IP:15672"
          - "AMQP Port: 5672"
          - "Admin credentials:"
          - "  Username: admin"
          - "  Password: admin123"
          - "Development credentials:"
          - "  Username: dev"
          - "  Password: dev123"
          - "  Virtual Host: /development"
