---
- name: Install RabbitMQ (AMD64)
  hosts: localhost
  gather_facts: no

  pre_tasks:
    - name: Check current user
      raw: whoami
      register: current_user
      changed_when: false

    - name: Check if running as root
      set_fact:
        is_root: "{{ current_user.stdout == 'root' }}"

    - name: Check if sudo is available
      raw: command -v sudo
      register: sudo_check
      changed_when: false

    - name: Set become method
      set_fact:
        can_sudo: "{{ sudo_check.rc == 0 }}"

    - name: Install sudo on Debian/Ubuntu systems
      raw: apt-get update && apt-get install -y sudo
      when: not can_sudo and not is_root
      become: yes
      become_method: ansible.builtin.sudo
      failed_when: false

    - name: Install sudo on RedHat/CentOS systems
      raw: yum install -y sudo
      when: not can_sudo and not is_root
      become: yes
      become_method: ansible.builtin.sudo
      failed_when: false

    - name: Verify privileges
      raw: if command -v sudo >/dev/null 2>&1; then sudo -n true 2>/dev/null; else id -u; fi
      register: priv_check
      changed_when: false

    - name: Gather facts
      setup:
      when: priv_check.rc == 0
      become: "{{ not is_root }}"
      become_method: "{{ can_sudo | ternary('ansible.builtin.sudo', 'ansible.builtin.su') }}"

  tasks:
    - name: Set become method for all tasks
      set_fact:
        ansible_become: "{{ not is_root }}"
        ansible_become_method: "{{ can_sudo | ternary('ansible.builtin.sudo', 'ansible.builtin.su') }}"

    # 创建必要的目录
    - name: Create RabbitMQ directories
      file:
        path: "{{ item }}"
        state: directory
        mode: "0755"
      with_items:
        - /etc/rabbitmq
        - /var/lib/rabbitmq
        - /var/log/rabbitmq

    # 安装 RabbitMQ
    - name: Install RabbitMQ (Debian/Ubuntu)
      apt:
        name:
          - rabbitmq-server
          - erlang
        state: present
        update_cache: yes
      when: ansible_os_family == "Debian"
      become: "{{ not is_root }}"
      become_method: "{{ can_sudo | ternary('ansible.builtin.sudo', 'ansible.builtin.su') }}"

    - name: Install RabbitMQ (RedHat/CentOS)
      yum:
        name:
          - rabbitmq-server
          - erlang
        state: present
      when: ansible_os_family == "RedHat"
      become: "{{ not is_root }}"
      become_method: "{{ can_sudo | ternary('ansible.builtin.sudo', 'ansible.builtin.su') }}"

    # 配置 RabbitMQ
    - name: Create RabbitMQ configuration
      copy:
        dest: /etc/rabbitmq/rabbitmq.conf
        content: |
          listeners.tcp.default = 5672
          management.tcp.port = 15672
          management.load_definitions = /etc/rabbitmq/definitions.json
        mode: "0644"
      become: "{{ not is_root }}"
      become_method: "{{ can_sudo | ternary('ansible.builtin.sudo', 'ansible.builtin.su') }}"

    - name: Create RabbitMQ definitions
      copy:
        dest: /etc/rabbitmq/definitions.json
        content: |
          {
            "users": [
              {
                "name": "admin",
                "password_hash": "{{ 'admin' | password_hash('sha512') }}",
                "tags": "administrator"
              }
            ],
            "vhosts": [
              {
                "name": "/"
              }
            ],
            "permissions": [
              {
                "user": "admin",
                "vhost": "/",
                "configure": ".*",
                "write": ".*",
                "read": ".*"
              }
            ]
          }
        mode: "0644"
      become: "{{ not is_root }}"
      become_method: "{{ can_sudo | ternary('ansible.builtin.sudo', 'ansible.builtin.su') }}"

    # 启动 RabbitMQ 服务
    - name: Start RabbitMQ service
      systemd:
        name: rabbitmq-server
        state: started
        enabled: yes
      become: "{{ not is_root }}"
      become_method: "{{ can_sudo | ternary('ansible.builtin.sudo', 'ansible.builtin.su') }}"

    # 启用 RabbitMQ 管理插件
    - name: Enable RabbitMQ management plugin
      command: rabbitmq-plugins enable rabbitmq_management
      become: "{{ not is_root }}"
      become_method: "{{ can_sudo | ternary('ansible.builtin.sudo', 'ansible.builtin.su') }}"
      changed_when: false

    - name: Debug message
      debug:
        msg: "RabbitMQ has been installed and configured successfully."
