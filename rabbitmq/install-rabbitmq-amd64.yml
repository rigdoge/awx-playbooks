---
- name: Deploy RabbitMQ 3.13.7 Container (AMD64)
  hosts: localhost
  become: yes
  tasks:
    - name: Download kubectl
      get_url:
        url: https://dl.k8s.io/release/v1.28.0/bin/linux/amd64/kubectl
        dest: /usr/local/bin/kubectl
        mode: '0755'
      failed_when: false

    - name: Create RabbitMQ directories
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      with_items:
        - /opt/rabbitmq/data
        - /opt/rabbitmq/config

    - name: Create RabbitMQ deployment yaml
      kubernetes.core.k8s:
        state: present
        mode: '0644'
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: rabbitmq
            namespace: default
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: rabbitmq
            template:
              metadata:
                labels:
                  app: rabbitmq
              spec:
                containers:
                - name: rabbitmq
                  image: >-
                    rabbitmq:3.13.7-management@
                    sha256:a6d5e08f5d5f1d6f8f9e56e1b6f0c4f6c2c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0
                  ports:
                  - containerPort: 5672
                  - containerPort: 15672
                  env:
                  - name: RABBITMQ_DEFAULT_USER
                    value: "admin"
                  - name: RABBITMQ_DEFAULT_PASS
                    value: "admin123"
                  volumeMounts:
                  - name: rabbitmq-data
                    mountPath: /var/lib/rabbitmq
                  - name: rabbitmq-config
                    mountPath: /etc/rabbitmq
                volumes:
                - name: rabbitmq-data
                  hostPath:
                    path: /opt/rabbitmq/data
                - name: rabbitmq-config
                  hostPath:
                    path: /opt/rabbitmq/config

    - name: Create RabbitMQ service
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: rabbitmq
            namespace: default
          spec:
            type: NodePort
            ports:
            - name: amqp
              port: 5672
              targetPort: 5672
              nodePort: 30672
            - name: management
              port: 15672
              targetPort: 15672
              nodePort: 31672
            selector:
              app: rabbitmq

    - name: Deploy RabbitMQ to K3s
      command: kubectl apply -f /opt/rabbitmq/rabbitmq-deployment.yml

    - name: Wait for RabbitMQ deployment
      command: kubectl rollout status deployment/rabbitmq -n default
      register: rollout_status
      until: rollout_status.rc == 0
      retries: 30
      delay: 10

    - name: Wait for RabbitMQ to be ready
      uri:
        url: http://localhost:31672
        status_code: 200
      register: result
      until: result.status == 200
      retries: 30
      delay: 10
      failed_when: false

    - name: Create virtual host
      command: >
        kubectl exec -n default deployment/rabbitmq --
        rabbitmqctl add_vhost /development
      failed_when: false

    - name: Create development user
      command: >
        kubectl exec -n default deployment/rabbitmq --
        rabbitmqctl add_user dev dev123
      failed_when: false

    - name: Set permissions for development user
      command: >
        kubectl exec -n default deployment/rabbitmq --
        rabbitmqctl set_permissions -p /development dev ".*" ".*" ".*"
      failed_when: false

    - name: Enable management plugin for dev user
      command: >
        kubectl exec -n default deployment/rabbitmq --
        rabbitmqctl set_user_tags dev management
      failed_when: false

    - name: Get cluster status
      command: >
        kubectl exec -n default deployment/rabbitmq --
        rabbitmqctl cluster_status
      register: cluster_status

    - name: Show cluster status
      debug:
        var: cluster_status.stdout_lines

    - name: Show RabbitMQ connection info
      debug:
        msg:
          - "RabbitMQ is running (AMD64)"
          - "Management UI: http://YOUR_SERVER_IP:31672"
          - "AMQP Port: 30672"
          - "Admin credentials:"
          - "  Username: admin"
          - "  Password: admin123"
          - "Development credentials:"
          - "  Username: dev"
          - "  Password: dev123"
          - "  Virtual Host: /development"
