---
- name: Install Nginx (ARM64)
  hosts: localhost
  gather_facts: no

  pre_tasks:
    - name: Check current user
      raw: whoami
      register: current_user
      changed_when: false

    - name: Check if running as root
      set_fact:
        is_root: "{{ current_user.stdout == 'root' }}"

    - name: Check if sudo is available
      raw: command -v sudo
      register: sudo_check
      changed_when: false

    - name: Set become method
      set_fact:
        can_sudo: "{{ sudo_check.rc == 0 }}"

    - name: Install sudo on Debian/Ubuntu systems
      raw: apt-get update && apt-get install -y sudo
      when: not can_sudo and not is_root
      become: yes
      become_method: ansible.builtin.sudo
      failed_when: false

    - name: Install sudo on RedHat/CentOS systems
      raw: yum install -y sudo
      when: not can_sudo and not is_root
      become: yes
      become_method: ansible.builtin.sudo
      failed_when: false

    - name: Verify privileges
      raw: if command -v sudo >/dev/null 2>&1; then sudo -n true 2>/dev/null; else id -u; fi
      register: priv_check
      changed_when: false

    - name: Gather facts
      setup:
      when: priv_check.rc == 0
      become: "{{ not is_root }}"
      become_method: "{{ can_sudo | ternary('ansible.builtin.sudo', 'ansible.builtin.su') }}"

  tasks:
    - name: Set become method for all tasks
      set_fact:
        ansible_become: "{{ not is_root }}"
        ansible_become_method: "{{ can_sudo | ternary('ansible.builtin.sudo', 'ansible.builtin.su') }}"

    # 创建必要的目录
    - name: Create Nginx directories
      file:
        path: "{{ item }}"
        state: directory
        mode: "0755"
      with_items:
        - /etc/nginx
        - /etc/nginx/conf.d
        - /var/log/nginx
        - /var/www/html

    # 创建 Nginx 配置文件
    - name: Create Nginx configuration
      copy:
        dest: /etc/nginx/nginx.conf
        content: |
          user nginx;
          worker_processes auto;
          error_log /var/log/nginx/error.log;
          pid /run/nginx.pid;

          events {
              worker_connections 1024;
          }

          http {
              log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                              '$status $body_bytes_sent "$http_referer" '
                              '"$http_user_agent" "$http_x_forwarded_for"';

              access_log  /var/log/nginx/access.log  main;

              sendfile            on;
              tcp_nopush          on;
              tcp_nodelay         on;
              keepalive_timeout   65;
              types_hash_max_size 2048;

              include             /etc/nginx/mime.types;
              default_type        application/octet-stream;

              include /etc/nginx/conf.d/*.conf;
          }
        mode: "0644"

    # 创建默认站点配置
    - name: Create default site configuration
      copy:
        dest: /etc/nginx/conf.d/default.conf
        content: |
          server {
              listen       80;
              server_name  localhost;
              root         /var/www/html;

              location / {
                  index  index.html;
              }

              error_page  404              /404.html;
              error_page  500 502 503 504  /50x.html;
          }
        mode: "0644"

    # 创建测试页面
    - name: Create test page
      copy:
        dest: /var/www/html/index.html
        content: |
          <!DOCTYPE html>
          <html>
          <head>
              <title>Welcome to Nginx!</title>
              <style>
                  body {
                      width: 35em;
                      margin: 0 auto;
                      font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
                  }
              </style>
          </head>
          <body>
              <h1>Welcome to Nginx!</h1>
              <p>If you see this page, the Nginx web server is successfully installed and working.</p>
          </body>
          </html>
        mode: "0644"

    # 启动 Nginx 服务
    - name: Start Nginx service
      systemd:
        name: nginx
        state: started
        enabled: yes
      become: "{{ not is_root }}"
      become_method: "{{ can_sudo | ternary('ansible.builtin.sudo', 'ansible.builtin.su') }}"

    - name: Debug message
      debug:
        msg: "Nginx has been installed and configured successfully."
