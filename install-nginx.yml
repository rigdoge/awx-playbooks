---
- name: Deploy Nginx Container
  hosts: localhost
  become: yes
  tasks:
    - name: Download kubectl
      get_url:
        url: https://dl.k8s.io/release/v1.28.0/bin/linux/amd64/kubectl
        dest: /usr/local/bin/kubectl
        mode: '0755'
      ignore_errors: yes

    - name: Create Nginx directories
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      with_items:
        - /opt/nginx/conf
        - /opt/nginx/html

    - name: Create default index.html
      copy:
        dest: /opt/nginx/html/index.html
        content: |
          <!DOCTYPE html>
          <html>
          <head>
            <title>Welcome to Nginx</title>
            <style>
              body {
                font-family: Arial, sans-serif;
                margin: 0;
                padding: 30px;
                background: #f0f2f5;
              }
              .container {
                max-width: 800px;
                margin: 0 auto;
                background: white;
                padding: 30px;
                border-radius: 8px;
                box-shadow: 0 2px 4px rgba(0,0,0,0.1);
              }
              h1 {
                color: #333;
                margin-bottom: 20px;
              }
              p {
                color: #666;
                line-height: 1.6;
              }
            </style>
          </head>
          <body>
            <div class="container">
              <h1>Welcome to Nginx!</h1>
              <p>If you see this page, the Nginx web server is successfully installed and working.</p>
            </div>
          </body>
          </html>

    - name: Create default.conf
      copy:
        dest: /opt/nginx/conf/default.conf
        content: |
          server {
              listen       80;
              server_name  localhost;

              location / {
                  root   /usr/share/nginx/html;
                  index  index.html index.htm;
              }

              error_page   500 502 503 504  /50x.html;
              location = /50x.html {
                  root   /usr/share/nginx/html;
              }
          }

    - name: Create Nginx deployment yaml
      copy:
        dest: /opt/nginx/nginx-deployment.yml
        content: |
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: nginx
            namespace: default
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: nginx
            template:
              metadata:
                labels:
                  app: nginx
              spec:
                containers:
                - name: nginx
                  image: nginx:1.25.3
                  ports:
                  - containerPort: 80
                  volumeMounts:
                  - name: nginx-conf
                    mountPath: /etc/nginx/conf.d
                  - name: nginx-html
                    mountPath: /usr/share/nginx/html
                volumes:
                - name: nginx-conf
                  hostPath:
                    path: /opt/nginx/conf
                - name: nginx-html
                  hostPath:
                    path: /opt/nginx/html
          ---
          apiVersion: v1
          kind: Service
          metadata:
            name: nginx
            namespace: default
          spec:
            type: NodePort
            ports:
            - name: http
              port: 80
              targetPort: 80
              nodePort: 30080
            selector:
              app: nginx

    - name: Deploy Nginx to K3s
      command: kubectl apply -f /opt/nginx/nginx-deployment.yml

    - name: Wait for Nginx deployment
      command: kubectl rollout status deployment/nginx -n default
      register: rollout_status
      until: rollout_status.rc == 0
      retries: 30
      delay: 10

    - name: Wait for Nginx to be ready
      uri:
        url: http://localhost:30080
        status_code: 200
      register: result
      until: result.status == 200
      retries: 30
      delay: 10
      ignore_errors: yes

    - name: Get Nginx pod status
      command: kubectl get pods -n default -l app=nginx -o wide
      register: pod_status

    - name: Show pod status
      debug:
        var: pod_status.stdout_lines

    - name: Show Nginx connection info
      debug:
        msg:
          - "Nginx is running"
          - "Web UI: http://YOUR_SERVER_IP:30080"